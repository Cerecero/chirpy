// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: query_user.sql

package database

import (
	"context"
	"database/sql"
	"time"

	"github.com/google/uuid"
)

const queryPassword = `-- name: QueryPassword :one
SELECT hashed_password FROM users
`

func (q *Queries) QueryPassword(ctx context.Context) (sql.NullString, error) {
	row := q.db.QueryRowContext(ctx, queryPassword)
	var hashed_password sql.NullString
	err := row.Scan(&hashed_password)
	return hashed_password, err
}

const queryUser = `-- name: QueryUser :one
SELECT id, created_at, updated_at, email FROM users WHERE email = $1
`

type QueryUserRow struct {
	ID        uuid.UUID
	CreatedAt time.Time
	UpdatedAt time.Time
	Email     string
}

func (q *Queries) QueryUser(ctx context.Context, email string) (QueryUserRow, error) {
	row := q.db.QueryRowContext(ctx, queryUser, email)
	var i QueryUserRow
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.Email,
	)
	return i, err
}
